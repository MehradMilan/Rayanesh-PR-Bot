# Generated by Django 5.1.7 on 2025-03-25 20:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("document", "0002_alter_document_user"),
        ("user", "0005_remove_telegramuser_user_auth_state"),
    ]

    operations = [
        migrations.RenameField(
            model_name="document",
            old_name="folder_id",
            new_name="directory_id",
        ),
        migrations.RenameField(
            model_name="document",
            old_name="google_doc_id",
            new_name="google_id",
        ),
        migrations.RenameField(
            model_name="document",
            old_name="user",
            new_name="owner_user",
        ),
        migrations.RemoveField(
            model_name="document",
            name="doc_code",
        ),
        migrations.AddField(
            model_name="document",
            name="is_directory",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="document",
            name="link",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.CreateModel(
            name="DocumentUserAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_count", models.IntegerField(default=1)),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("edit", "edit"),
                            ("comment", "comment"),
                            ("view", "view"),
                        ],
                        default="view",
                        max_length=10,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="document.document",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.telegramuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentGroupAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("edit", "edit"),
                            ("comment", "comment"),
                            ("view", "view"),
                        ],
                        default="view",
                        max_length=10,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="document.document",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="user.group"
                    ),
                ),
            ],
            options={
                "unique_together": {("group", "document")},
            },
        ),
    ]
