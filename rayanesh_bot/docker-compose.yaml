services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: api_app
    command: gunicorn rayanesh_core.wsgi:application --bind 0.0.0.0:8000
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - api-core.env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    expose:
      - "8000"
    environment:
      - DEBUG=${DEBUG}
    networks:
      - app-network

  celery_worker:
    build: .
    container_name: celery_worker
    restart: always
    command: celery -A core worker --loglevel=info
    depends_on:
      - db
      - redis
    env_file:
      - api-core.env

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx_template.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./api-core.env:/app/api-core.env
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: