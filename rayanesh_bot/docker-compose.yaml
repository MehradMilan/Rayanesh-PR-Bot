services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: unless-stopped
    env_file:
      - api-core.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: api_app
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    restart: unless-stopped
    depends_on:
      - db
      - redis
    env_file:
      - api-core.env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    # expose:
    #   - "8000"
    # networks:
    #   - app-network

  celery_worker:
    build: .
    container_name: celery_worker
    restart: unless-stopped
    command: [
      "celery",
      "-A",
      "core",
      "worker",
      "-l",
      "info",
      "-Q",
      "db_postgres_backup,gatekeepers,remind_tasks_in_groups,notification",
    ]
    volumes:
      - celery_logs:/app/logs
      - db_backups:/app/backups
    depends_on:
      - db
      - redis
    env_file:
      - api-core.env

  celery_beat:
    build: .
    container_name: celery_beat
    restart: unless-stopped
    command: [
      "celery",
      "-A",
      "core",
      "beat",
      "-l",
      "info",
      "--scheduler",
      "django_celery_beat.schedulers:DatabaseScheduler"
    ]
    volumes:
      - .:/app
      - beat_data:/app/beat_data
    depends_on:
      - db
      - redis


  telegram_bot_polling:
    build: .
    container_name: telegram_bot_polling
    command: python manage.py runbot
    restart: unless-stopped
    depends_on:
      - web

  raya_bot_polling:
    build: .
    container_name: raya_bot_polling
    command: python manage.py run_rayabot
    restart: unless-stopped
    depends_on:
      - web

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ./nginx_template.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #     - ./api-core.env:/app/api-core.env
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - web
  #   networks:
  #     - app-network

# networks:
#   app-network:
#     driver: bridge

volumes:
  postgres_data:
  celery_logs:
  db_backups:
  beat_data: